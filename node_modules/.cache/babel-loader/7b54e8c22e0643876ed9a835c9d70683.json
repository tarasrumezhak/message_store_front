{"ast":null,"code":"var _jsxFileName = \"/home/taras/Documents/web/message_store/store/src/query_forms/test.js\";\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default function Query1Form() {\n  const classes = useStyles();\n\n  const useInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n    return {\n      value,\n      setValue,\n      reset: () => setValue(\"\"),\n      bind: {\n        value,\n        onChange: event => {\n          setValue(event.target.value);\n        }\n      }\n    };\n  };\n\n  const {\n    value: author,\n    bind: bindAuthor,\n    reset: resetAuthor\n  } = useInput('');\n  const {\n    value: dateFrom,\n    bind: bindDateFrom,\n    reset: resetDateFrom\n  } = useInput('');\n  const {\n    value: dateTo,\n    bind: bindDateTo,\n    reset: resetDateTo\n  } = useInput('');\n  const {\n    value: count,\n    bind: bindCount,\n    reset: resetCount\n  } = useInput('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let state = {\n      author: author,\n      dateFrom: dateFrom,\n      dateTo: dateTo,\n      count: count\n    };\n    fetch(\"http://localhost:5000/query1\", {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(state)\n    }).then(function (response) {\n      // console.log(response);\n      // console.log(state);\n      // return response.json();\n      if (response.status === 200) {// return <Redirect to='login'/>\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"\\u0412\\u0432\\u0435\\u0434\\u0438 \\u043D\\u0435\\u043E\\u0431\\u0445\\u0456\\u0434\\u043D\\u0456 \\u0434\\u0430\\u043D\\u0456\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    label: \"From\",\n    name: \"username\",\n    autoComplete: \"username\"\n  }, bindUserName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\"\n  }, bindEmail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"\\u041E\\u0442\\u0440\\u0438\\u043C\\u0430\\u0442\\u0438\"))));\n}","map":{"version":3,"sources":["/home/taras/Documents/web/message_store/store/src/query_forms/test.js"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","makeStyles","Container","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Query1Form","classes","useInput","initialValue","value","setValue","reset","bind","onChange","event","target","author","bindAuthor","resetAuthor","dateFrom","bindDateFrom","resetDateFrom","dateTo","bindDateTo","resetDateTo","count","bindCount","resetCount","handleSubmit","preventDefault","state","fetch","method","headers","body","JSON","stringify","then","response","status","bindUserName","bindEmail"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Query1Form() {\n    const classes = useStyles();\n\n    const useInput = initialValue => {\n        const [value, setValue] = useState(initialValue);\n\n        return {\n            value,\n            setValue,\n            reset: () => setValue(\"\"),\n            bind: {\n                value,\n                onChange: event => {\n                    setValue(event.target.value);\n                }\n            }\n        };\n    };\n\n    const {value:author, bind:bindAuthor, reset:resetAuthor} = useInput('');\n    const {value:dateFrom, bind:bindDateFrom, reset:resetDateFrom} = useInput('');\n    const {value:dateTo, bind:bindDateTo, reset:resetDateTo} = useInput('');\n    const {value:count, bind:bindCount, reset:resetCount} = useInput('');\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        let state = {\n            author: author,\n            dateFrom: dateFrom,\n            dateTo: dateTo,\n            count: count,\n        };\n\n        fetch(\"http://localhost:5000/query1\", {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(state)\n        }).then(function (response) {\n            // console.log(response);\n            // console.log(state);\n            // return response.json();\n            if (response.status === 200) {\n                // return <Redirect to='login'/>\n            }\n        });\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Введи необхідні дані\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"From\"\n                                name=\"username\"\n                                autoComplete=\"username\"\n                                {...bindUserName}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                {...bindEmail}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Отримати\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}