{"ast":null,"code":"var _jsxFileName = \"/home/taras/Documents/web/message_store/store/src/adress.js\";\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nexport default function AddressForm() {\n  const handleSubmit = event => {\n    event.preventDefault();\n    let state = {\n      account: account,\n      service: service,\n      message: message\n    };\n    fetch(\"http://localhost:5000/order\", {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(state)\n    }).then(function (response) {\n      // console.log(response);\n      // console.log(state);\n      // return response.json();\n      if (response.status === 200) {// return <Redirect to='login'/>\n      }\n    });\n  };\n\n  const useInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n    return {\n      value,\n      setValue,\n      reset: () => setValue(\"\"),\n      bind: {\n        value,\n        onChange: event => {\n          setValue(event.target.value);\n        }\n      }\n    };\n  };\n\n  const {\n    value: account,\n    bind: bindAccount,\n    reset: resetAccount\n  } = useInput('');\n  const {\n    value: service,\n    bind: bindService,\n    reset: resetService\n  } = useInput('');\n  const {\n    value: message,\n    bind: bindMessage,\n    reset: resetMessage\n  } = useInput('');\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"General info\"), /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    required: true,\n    id: \"account\",\n    name: \"account\",\n    label: \"Your account\",\n    fullWidth: true,\n    autoComplete: \"your account\"\n  }, bindAccount, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    id: \"service\",\n    name: \"service\",\n    label: \"Service Name\",\n    fullWidth: true,\n    autoComplete: \"service name\"\n  }, bindService, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    required: true,\n    id: \"message\",\n    name: \"message\",\n    label: \"Message for author\",\n    fullWidth: true,\n    autoComplete: \"message\"\n  }, bindMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }))))));\n}","map":{"version":3,"sources":["/home/taras/Documents/web/message_store/store/src/adress.js"],"names":["React","useState","Grid","Typography","TextField","FormControlLabel","Checkbox","AddressForm","handleSubmit","event","preventDefault","state","account","service","message","fetch","method","headers","body","JSON","stringify","then","response","status","useInput","initialValue","value","setValue","reset","bind","onChange","target","bindAccount","resetAccount","bindService","resetService","bindMessage","resetMessage"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function AddressForm() {\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        let state = {\n            account: account,\n            service: service,\n            message: message\n        };\n\n        fetch(\"http://localhost:5000/order\", {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(state)\n        }).then(function (response) {\n            // console.log(response);\n            // console.log(state);\n            // return response.json();\n            if (response.status === 200) {\n                // return <Redirect to='login'/>\n            }\n        });\n    };\n\n    const useInput = initialValue => {\n        const [value, setValue] = useState(initialValue);\n\n        return {\n            value,\n            setValue,\n            reset: () => setValue(\"\"),\n            bind: {\n                value,\n                onChange: event => {\n                    setValue(event.target.value);\n                }\n            }\n        };\n    };\n\n    const {value:account, bind:bindAccount, reset:resetAccount} = useInput('');\n    const {value:service, bind:bindService, reset:resetService} = useInput('');\n    const {value:message, bind:bindMessage, reset:resetMessage} = useInput('');\n    return (\n        <React.Fragment>\n            <Typography variant=\"h6\" gutterBottom>\n                General info\n            </Typography>\n            <form noValidate onSubmit={handleSubmit}>\n            <Grid container spacing={3}>\n                {/*<Grid item xs={12} sm={6}>*/}\n                {/*    <TextField*/}\n                {/*        required*/}\n                {/*        id=\"firstName\"*/}\n                {/*        name=\"firstName\"*/}\n                {/*        label=\"First name\"*/}\n                {/*        fullWidth*/}\n                {/*        autoComplete=\"given-name\"*/}\n                {/*    />*/}\n                {/*</Grid>*/}\n                {/*<Grid item xs={12} sm={6}>*/}\n                {/*    <TextField*/}\n                {/*        required*/}\n                {/*        id=\"lastName\"*/}\n                {/*        name=\"lastName\"*/}\n                {/*        label=\"Last name\"*/}\n                {/*        fullWidth*/}\n                {/*        autoComplete=\"family-name\"*/}\n                {/*    />*/}\n                {/*</Grid>*/}\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"account\"\n                        name=\"account\"\n                        label=\"Your account\"\n                        fullWidth\n                        autoComplete=\"your account\"\n                        {...bindAccount}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id=\"service\"\n                        name=\"service\"\n                        label=\"Service Name\"\n                        fullWidth\n                        autoComplete=\"service name\"\n                        {...bindService}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"message\"\n                        name=\"message\"\n                        label=\"Message for author\"\n                        fullWidth\n                        autoComplete=\"message\"\n                        {...bindMessage}\n                    />\n                </Grid>\n            </Grid>\n            </form>\n        </React.Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}