{"version":3,"sources":["serviceWorker.js","listItems.js","Title.js","Deposits.js","Orders.js","adress.js","payment.js","review.js","checkout.js","authorCard.js","album.js","admin.js","query_forms/query1.js","orders_all.js","Dashboard.js","signup.js","signin.js","signinside.js","signupside.js","main.js","index.js"],"names":["Boolean","window","location","hostname","match","mainListItems","to","ListItem","button","ListItemIcon","ListItemText","primary","ListSubheader","Title","props","Typography","component","variant","color","gutterBottom","children","makeStyles","depositContext","flex","useStyles","theme","seeMore","marginTop","spacing","Orders","classes","useState","error","setError","isLoaded","setIsLoaded","orders","setOrders","useEffect","fetch","then","res","json","result","console","log","message","Fragment","Table","size","TableHead","TableRow","TableCell","TableBody","slice","reverse","map","row","key","id","date","account","service","align","amount","className","AddressForm","useInput","initialValue","value","setValue","reset","bind","onChange","event","target","bindAccount","bindService","bindMessage","noValidate","onSubmit","preventDefault","state","method","headers","body","JSON","stringify","response","status","Grid","container","item","xs","TextField","required","name","label","fullWidth","autoComplete","Button","type","PaymentForm","md","helperText","products","desc","price","payments","detail","listItem","padding","total","fontWeight","title","Review","List","disablePadding","product","secondary","direction","payment","appBar","position","layout","width","marginLeft","marginRight","breakpoints","up","paper","marginBottom","stepper","buttons","display","justifyContent","steps","Checkout","React","activeStep","setActiveStep","CssBaseline","Paper","Stepper","Step","StepLabel","length","step","Error","getStepContent","onClick","icon","heroContent","backgroundColor","palette","background","heroButtons","cardGrid","paddingTop","paddingBottom","card","height","flexDirection","cardMedia","cardContent","flexGrow","footer","AuthorCard","Card","CardMedia","image","CardContent","description","Album","authors","setAuthors","Container","maxWidth","paragraph","sm","last_name","first_name","root","margin","Admin","useRouteMatch","ButtonGroup","orientation","aria-label","alignItems","avatar","main","form","submit","Query1Form","author","bindAuthor","count","bindCount","customers","setCustomers","Date","selectedDate","setSelectedDate","selectedDate2","url","URL","params","date_from","getFullYear","getMonth","getDate","date_to","Object","keys","forEach","searchParams","append","utils","DateFnsUtils","justify","disableToolbar","format","KeyboardButtonProps","OrdersAll","toolbar","paddingRight","toolbarIcon","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","content","overflow","fixedHeight","Dashboard","open","setOpen","clsx","AppBar","Toolbar","IconButton","edge","noWrap","href","Badge","Drawer","Divider","exact","path","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","SignInSide","bindEmail","bindPassword","elevation","square","Avatar","Redirect","autoFocus","FormControlLabel","control","Checkbox","SignUpSide","firstName","bindFirstName","lastName","bindLastName","email","userName","bindUserName","password","username","Main","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3a971472.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport {Link} from \"react-router-dom\";\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\n\n\nexport const mainListItems = (\n    <div>\n        {/*<ListItem button>*/}\n        {/*    <ListItemIcon>*/}\n        {/*        <DashboardIcon />*/}\n        {/*    </ListItemIcon>*/}\n        {/*    <ListItemText primary=\"Dashboard\" />*/}\n        {/*</ListItem>*/}\n        <Link to=\"/dashboard/orders\">\n        <ListItem button>\n            <ListItemIcon>\n                <ViewListIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Orders\" />\n        </ListItem>\n        </Link>\n        <Link to=\"/dashboard/authors\">\n        <ListItem button>\n            <ListItemIcon>\n                <PeopleIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Authors\" />\n        </ListItem>\n        </Link>\n        <Link to=\"/dashboard/order\">\n            <ListItem button>\n                <ListItemIcon>\n                    <ShoppingCartIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Make order\" />\n            </ListItem>\n        </Link>\n        <Link to=\"/dashboard/admin\">\n            <ListItem button>\n                <ListItemIcon>\n                    <VerifiedUserIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Admin queries\" />\n            </ListItem>\n        </Link>\n        {/*<ListItem button>*/}\n        {/*    <ListItemIcon>*/}\n        {/*        <BarChartIcon />*/}\n        {/*    </ListItemIcon>*/}\n        {/*    <ListItemText primary=\"Reports\" />*/}\n        {/*</ListItem>*/}\n        {/*<ListItem button>*/}\n        {/*    <ListItemIcon>*/}\n        {/*        <LayersIcon />*/}\n        {/*    </ListItemIcon>*/}\n        {/*    <ListItemText primary=\"Integrations\" />*/}\n        {/*</ListItem>*/}\n    </div>\n);\n\nexport const secondaryListItems = (\n    <div>\n        <ListSubheader inset>Saved reports</ListSubheader>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Current month\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Last quarter\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Year-end sale\" />\n        </ListItem>\n    </div>\n);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n    return (\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n            {props.children}\n        </Typography>\n    );\n}\n\nTitle.propTypes = {\n    children: PropTypes.node,\n};","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event) {\n    event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n    depositContext: {\n        flex: 1,\n    },\n});\n\nexport default function Deposits() {\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <Title>Recent Deposits</Title>\n            <Typography component=\"p\" variant=\"h4\">\n                $3,024.00\n            </Typography>\n            <Typography color=\"textSecondary\" className={classes.depositContext}>\n                on 15 March, 2019\n            </Typography>\n            <div>\n                <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n                    View balance\n                </Link>\n            </div>\n        </React.Fragment>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport {Link} from 'react-router-dom';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n    return { id, date, name, shipTo, paymentMethod, amount };\n}\n\n// const rows = [\n//     createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n//     createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n//     createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n//     createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n//     createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n// ];\n\n//\n// const rows = [\n//\n// ]\n\nfunction preventDefault(event) {\n    event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nexport default function Orders() {\n    const classes = useStyles();\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [orders, setOrders] = useState([]);\n\n    useEffect(() => {\n        fetch(\"https://db-flask-app.herokuapp.com/order\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setOrders(result);\n                    console.log(result);\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    });\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <React.Fragment>\n                <Title>Recent Orders</Title>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Date</TableCell>\n                            <TableCell>Account</TableCell>\n                            <TableCell>Service</TableCell>\n                            <TableCell>Message</TableCell>\n                            {/*<TableCell align=\"right\">Sale Amount</TableCell>*/}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {orders.slice(-5).reverse().map((row) => (\n                            <TableRow key={row.id}>\n                                <TableCell>{row.date}</TableCell>\n                                <TableCell>{row.account}</TableCell>\n                                <TableCell>{row.service}</TableCell>\n                                <TableCell>{row.message}</TableCell>\n                                <TableCell align=\"right\">{row.amount}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <div className={classes.seeMore}>\n                    <Link to=\"orders/all\">\n                        See more orders\n                    </Link>\n                </div>\n            </React.Fragment>\n        );\n    }\n}","import React, {useState} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from \"@material-ui/core/Button\";\n\nexport default function AddressForm() {\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        let state = {\n            account: account,\n            service: service,\n            message: message\n        };\n        fetch(\"https://db-flask-app.herokuapp.com/order\", {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(state)\n        }).then(function (response) {\n            // console.log(response);\n            // console.log(state);\n            // return response.json();\n            if (response.status === 200) {\n                // return <Redirect to='login'/>\n            }\n        });\n    };\n\n    const useInput = initialValue => {\n        const [value, setValue] = useState(initialValue);\n\n        return {\n            value,\n            setValue,\n            reset: () => setValue(\"\"),\n            bind: {\n                value,\n                onChange: event => {\n                    setValue(event.target.value);\n                }\n            }\n        };\n    };\n\n    const {value:account, bind:bindAccount, reset:resetAccount} = useInput('');\n    const {value:service, bind:bindService, reset:resetService} = useInput('');\n    const {value:message, bind:bindMessage, reset:resetMessage} = useInput('');\n    return (\n        <React.Fragment>\n            <Typography variant=\"h6\" gutterBottom>\n                General info\n            </Typography>\n            <form noValidate onSubmit={handleSubmit}>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"account\"\n                        name=\"account\"\n                        label=\"Your account\"\n                        fullWidth\n                        autoComplete=\"your account\"\n                        {...bindAccount}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id=\"service\"\n                        name=\"service\"\n                        label=\"Service Name\"\n                        fullWidth\n                        autoComplete=\"service name\"\n                        {...bindService}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"message\"\n                        name=\"message\"\n                        label=\"Message for author\"\n                        fullWidth\n                        autoComplete=\"message\"\n                        {...bindMessage}\n                    />\n                </Grid>\n            </Grid>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"secondary\"\n                >\n                    Place order now\n                </Button>\n            </form>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function PaymentForm() {\n    return (\n        <React.Fragment>\n            <Typography variant=\"h6\" gutterBottom>\n                Payment method\n            </Typography>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={6}>\n                    <TextField required id=\"cardName\" label=\"Name on card\" fullWidth autoComplete=\"cc-name\" />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <TextField\n                        required\n                        id=\"cardNumber\"\n                        label=\"Card number\"\n                        fullWidth\n                        autoComplete=\"cc-number\"\n                    />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <TextField required id=\"expDate\" label=\"Expiry date\" fullWidth autoComplete=\"cc-exp\" />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <TextField\n                        required\n                        id=\"cvv\"\n                        label=\"CVV\"\n                        helperText=\"Last three digits on signature strip\"\n                        fullWidth\n                        autoComplete=\"cc-csc\"\n                    />\n                </Grid>\n                {/*<Grid item xs={12}>*/}\n                {/*    <FormControlLabel*/}\n                {/*        control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}*/}\n                {/*        label=\"Remember credit card details for next time\"*/}\n                {/*    />*/}\n                {/*</Grid>*/}\n            </Grid>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\n\nconst products = [\n    { name: 'Instagram message', desc: 'I want to meet a girl, help me.', price: '$9.99' },\n    // { name: 'Product 2', desc: 'Another thing', price: '$3.45' },\n    // { name: 'Product 3', desc: 'Something else', price: '$6.51' },\n    // { name: 'Product 4', desc: 'Best thing of all', price: '$14.11' },\n    // { name: 'Shipping', desc: '', price: 'Free' },\n];\n// const addresses = ['1 Material-UI Drive', 'Reactville', 'Anytown', '99999', 'USA'];\nconst payments = [\n    { name: 'Card type', detail: 'Visa' },\n    { name: 'Card holder', detail: 'Mr Taras Rumezhak' },\n    { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\n    { name: 'Expiry date', detail: '04/2024' },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    listItem: {\n        padding: theme.spacing(1, 0),\n    },\n    total: {\n        fontWeight: 700,\n    },\n    title: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function Review() {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Typography variant=\"h6\" gutterBottom>\n                Order summary\n            </Typography>\n            <List disablePadding>\n                {products.map((product) => (\n                    <ListItem className={classes.listItem} key={product.name}>\n                        <ListItemText primary={product.name} secondary={product.desc} />\n                        <Typography variant=\"body2\">{product.price}</Typography>\n                    </ListItem>\n                ))}\n                <ListItem className={classes.listItem}>\n                    <ListItemText primary=\"Total\" />\n                    <Typography variant=\"subtitle1\" className={classes.total}>\n                        $9.99\n                    </Typography>\n                </ListItem>\n            </List>\n            <Grid container spacing={2}>\n                {/*<Grid item xs={12} sm={6}>*/}\n                {/*    <Typography variant=\"h6\" gutterBottom className={classes.title}>*/}\n                {/*        Shipping*/}\n                {/*    </Typography>*/}\n                {/*    <Typography gutterBottom>John Smith</Typography>*/}\n                {/*    <Typography gutterBottom>{addresses.join(', ')}</Typography>*/}\n                {/*</Grid>*/}\n                <Grid item container direction=\"column\" xs={12}>\n                    <Typography variant=\"h6\" gutterBottom className={classes.title}>\n                        Payment details\n                    </Typography>\n                    <Grid container>\n                        {payments.map((payment) => (\n                            <React.Fragment key={payment.name}>\n                                <Grid item xs={6}>\n                                    <Typography gutterBottom>{payment.name}</Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography gutterBottom>{payment.detail}</Typography>\n                                </Grid>\n                            </React.Fragment>\n                        ))}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './adress';\nimport PaymentForm from './payment';\nimport Review from './review';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\">\n                Chat Dealers\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            width: 600,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n            marginTop: theme.spacing(6),\n            marginBottom: theme.spacing(6),\n            padding: theme.spacing(3),\n        },\n    },\n    stepper: {\n        padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst steps = ['General info', 'Payment details', 'Review your order'];\n\nfunction getStepContent(step) {\n    switch (step) {\n        case 0:\n            return <AddressForm />;\n        case 1:\n            return <PaymentForm />;\n        case 2:\n            return <Review />;\n        default:\n            throw new Error('Unknown step');\n    }\n}\n\nexport default function Checkout() {\n\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    // const [checked, setChecked] = React.useState(false);\n    const handleNext = () => {\n        setActiveStep(activeStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep(activeStep - 1);\n    };\n\n\n\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <main className={classes.layout}>\n                <Paper className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                        Order\n                    </Typography>\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\n                        {steps.map((label) => (\n                            <Step key={label}>\n                                <StepLabel>{label}</StepLabel>\n                            </Step>\n                        ))}\n                    </Stepper>\n                    <React.Fragment>\n                        {activeStep === steps.length ? (\n                            <React.Fragment>\n                                <Typography variant=\"h5\" gutterBottom>\n                                    Thank you for your order.\n                                </Typography>\n                                <Typography variant=\"subtitle1\">\n                                    Author will help you with your message!\n                                </Typography>\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                {getStepContent(activeStep)}\n                                <div className={classes.buttons}>\n                                    {activeStep !== 0 && (\n                                        <Button onClick={handleBack} className={classes.button}>\n                                            Back\n                                        </Button>\n                                    )}\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleNext}\n                                        className={classes.button}\n                                    >\n                                        {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n                                    </Button>\n                                </div>\n                            </React.Fragment>\n                        )}\n                    </React.Fragment>\n                </Paper>\n            </main>\n        </React.Fragment>\n    );\n}","import CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n}));\n\nexport default function AuthorCard(props) {\n    const classes = useStyles();\n    return (\n        <Card className={classes.card}>\n            <CardMedia\n                className={classes.cardMedia}\n                image={props.image}\n            />\n            <CardContent >\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {props.name}\n                </Typography>\n                <Typography>\n                    {props.description}\n                </Typography>\n            </CardContent>\n            {/*<CardActions>*/}\n            {/*    <Button size=\"small\" color=\"primary\">*/}\n            {/*        View*/}\n            {/*    </Button>*/}\n            {/*    <Button size=\"small\" color=\"primary\">*/}\n            {/*        Edit*/}\n            {/*    </Button>*/}\n            {/*</CardActions>*/}\n        </Card>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AuthorCard from \"./authorCard\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n}));\n\n// const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport default function Album() {\n    const classes = useStyles();\n    const [authors, setAuthors] = useState([]);\n\n    useEffect(() => {\n        fetch(\"https://db-flask-app.herokuapp.com/authors\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setAuthors(result);\n                    console.log(result);\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    // setIsLoaded(true);\n                    // setError(error);\n                }\n            )\n    });\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <main>\n                <div className={classes.heroContent}>\n                    <Container maxWidth=\"sm\">\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                            Our Authors\n                        </Typography>\n                        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                            We are glad to present our amazing authors which will help you write the best message for your social network account.\n                        </Typography>\n                    </Container>\n                </div>\n                <Container className={classes.cardGrid} maxWidth=\"md\">\n                    {/* End hero unit */}\n                    <Grid container spacing={4}>\n                        {/*{cards.map((card) => (*/}\n                            <Grid item xs={12} sm={6} md={4}>\n                        <AuthorCard image='https://i.ytimg.com/vi/rjO1hhmQTR8/maxresdefault.jpg' name=\"Коза Дереза\" description=\"Our main author\"/>\n                            </Grid>\n                        <Grid item xs={12} sm={6} md={4}>\n                            <AuthorCard image='https://miro.medium.com/max/3150/2*FXDwohnwPB1G0OENggAWDg.jpeg' name=\"Taras Rumezhak\" description=\"Cool author\"/>\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4}>\n                            <AuthorCard image='https://www.iboo.com/Content/Images/uploaded/Homepage/Authors/Author%20680%20x%20300.jpg' name=\"Solomia Sorokotiaha\" description=\"Cool author\"/>\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4}>\n                        <AuthorCard image='https://www.iboo.com/Content/Images/uploaded/Homepage/Authors/Author%20680%20x%20300.jpg' name=\"Max Hrytsay\" description=\"Cool author\"/>\n                    </Grid>\n                        <Grid item xs={12} sm={6} md={4}>\n                            <AuthorCard image='https://www.iboo.com/Content/Images/uploaded/Homepage/Authors/Author%20680%20x%20300.jpg' name=\"Danylo Nazaruk\" description=\"Cool author\"/>\n                        </Grid>\n                        {authors.map((row) => (\n                            <Grid item xs={12} sm={6} md={4}>\n                                <AuthorCard image={row.last_name === \"Trantow\" ? \"https://sun9-58.userapi.com/S4W_L31ydBIX-_gZzOkiWbV35ukRfqi1P9UKAg/w61MBC0sZ7g.jpg\" :\n                                    'https://thumbs.dreamstime.com/t/author-word-vintage-wood-type-letterpress-against-grained-106157292.jpg'}\n                                            name={row.first_name + \" \" + row.last_name} description=\"Registered author\"/>\n                            </Grid>\n                        ))}\n\n                                {/*<Card className={classes.card}>*/}\n                                {/*    <CardMedia*/}\n                                {/*        className={classes.cardMedia}*/}\n                                {/*        image=\"https://i.ytimg.com/vi/rjO1hhmQTR8/maxresdefault.jpg\"*/}\n                                {/*        title=\"Image title\"*/}\n                                {/*    />*/}\n                                {/*    <CardContent className={classes.cardContent}>*/}\n                                {/*        <Typography gutterBottom variant=\"h5\" component=\"h2\">*/}\n                                {/*            Коза Дереза*/}\n                                {/*        </Typography>*/}\n                                {/*        <Typography>*/}\n                                {/*            Головний автор!*/}\n                                {/*        </Typography>*/}\n                                {/*    </CardContent>*/}\n                                {/*</Card>*/}\n\n\n\n\n                        {/*))}*/}\n                    </Grid>\n                </Container>\n            </main>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {useRouteMatch} from \"react-router\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(30),\n        },\n    },\n}));\n\nexport default function Admin() {\n    const classes = useStyles();\n    let match = useRouteMatch();\n\n    return (\n        <div className={classes.root}>\n            <ButtonGroup\n                orientation=\"vertical\"\n                color=\"primary\"\n                aria-label=\"vertical contained primary button group\"\n                variant=\"text\"\n            >\n                <Link to='admin/query1'>\n                    <Button >для автора A знайти усiх покупцiв, якi замовляли у нього повiдомлення хоча б N разiв за\n                        вказаний перiод (з дати F по дату T)\n                    </Button>\n                </Link>\n                <Button>для покупця С знайти усiх авторiв, у яких вiн замовляв повiдомлення чи статтi за вказаний\n                    перiод (з дати F по дату T)</Button>\n                <Button>знайти усiх авторiв, якi отримували замовлення вiд щонайменше N рiзних покупцiв за\n                    вказаний перiод (з дати F по дату T)</Button>\n                <Button>знайти усiх покупцiв, якi зробили хоча б N замовлень за вказаний перiод (з дати F по дату\n                    T)</Button>\n                <Button>для покупця С знайти усi соцiальнi мережi, для яких вiн зробив хоча б N замовлень за\n                    вказаний перiод (з дати F по дату T)</Button>\n                <Button>для автора А знайти усi облiковi записи у соцiальних мережах, до яких вiн мав доступ\n                    протягом вказаного перiоду (з дати F по дату T)</Button>\n                <Button>для покупця С знайти усiх авторiв, яким вiн надав доступ до хоча б одного облiкового\n                    запису у соцiальнiй мережi, а потiм позбавив його цього доступу</Button>\n                <Button>знайти усi спiльнi подiї для автора A та покупця С за вказаний перiод (з дати F по дату\n                    T)</Button>\n                <Button>для автора A та кожної соцiальної мережi, у якiй вiн писав статтю, знайти скiльки разiв за\n                    вказаний перiод (з дати F по дату T) вiн писав її у групi з щонайменше N авторiв</Button>\n                <Button>для покупця С та кожного стилю, у якому вiн замовляв повiдомлення, знайти скiльки\n                    замовлень за вказаний перiод (з дати F по дату T) отримали 50% знижку</Button>\n                <Button>знайти сумарну кiлькiсть замовлень по мiсяцях</Button>\n                <Button>вивести соцiальнi мережi у порядку спадання середньої кiлькостi повiдомлень по усiх стилях, що були написанi автором A за вказаний перiод (з дати F по дату T)</Button>\n                <Link to=\"/dashboard/admin/test\">\n                    <Button>тест: знайти усі замовлення з дати по дату</Button>\n                </Link>\n            </ButtonGroup>\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Title from \"../Title\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Query1Form() {\n    const classes = useStyles();\n\n    const useInput = initialValue => {\n        const [value, setValue] = useState(initialValue);\n\n        return {\n            value,\n            setValue,\n            reset: () => setValue(\"\"),\n            bind: {\n                value,\n                onChange: event => {\n                    setValue(event.target.value);\n                }\n            }\n        };\n    };\n\n    const {value:author, bind:bindAuthor, reset:resetAuthor} = useInput('');\n    const {value:dateFrom, bind:bindDateFrom, reset:resetDateFrom} = useInput('');\n    const {value:dateTo, bind:bindDateTo, reset:resetDateTo} = useInput('');\n    const {value:count, bind:bindCount, reset:resetCount} = useInput('');\n\n    const [customers, setCustomers] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const [selectedDate, setSelectedDate] = React.useState(new Date('1990-08-18T21:11:54'));\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n    };\n\n    const [selectedDate2, setSelectedDate2] = React.useState(new Date('2020-06-20T21:11:54'));\n\n    const handleDateChange2 = (date) => {\n        setSelectedDate(date);\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        let state = {\n            author: author,\n            dateFrom: selectedDate,\n            dateTo: selectedDate2,\n            count: count,\n        };\n        // var date_from = selectedDate.getFullYear() + '-' + selectedDate.getDate() + '-' + selectedDate.getDay();\n        // var date_to = selectedDate2.getFullYear() + '-' + selectedDate2.getDate() + '-' + selectedDate2.getDay();\n        var url = new URL(\"https://db-flask-app.herokuapp.com/query1\"),\n            params = {author: author, date_from: selectedDate.getFullYear() + '-' + selectedDate.getMonth() + '-' + selectedDate.getDate(),\n                date_to: selectedDate2.getFullYear() + '-' + selectedDate2.getMonth() + '-' + selectedDate2.getDate(),\n                count: count};\n        Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\n        fetch(url)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setCustomers(result);\n                    // console.log(result);\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    // setIsLoaded(true);\n                    // setError(error);\n                }\n            )\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Введіть необхідні дані\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"author\"\n                                label=\"Прізвище Автора\"\n                                name=\"authore\"\n                                autoComplete=\"author\"\n                                {...bindAuthor}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <Grid container justify=\"space-around\">\n                                    <KeyboardDatePicker\n                                        disableToolbar\n                                        variant=\"inline\"\n                                        format=\"yyyy-MM-dd\"\n                                        margin=\"normal\"\n                                        id=\"date-picker-inline\"\n                                        label=\"Виберіть початкову дату\"\n                                        value={selectedDate}\n                                        onChange={handleDateChange}\n                                        KeyboardButtonProps={{\n                                            'aria-label': 'change date',\n                                        }}\n                                    />\n                                </Grid>\n                            </MuiPickersUtilsProvider>\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <Grid container justify=\"space-around\">\n                                    <KeyboardDatePicker\n                                        disableToolbar\n                                        variant=\"inline\"\n                                        format=\"yyyy-MM-dd\"\n                                        margin=\"normal\"\n                                        id=\"date-picker-inline\"\n                                        label=\"Виберіть кінцеву дату\"\n                                        value={selectedDate2}\n                                        onChange={handleDateChange2}\n                                        KeyboardButtonProps={{\n                                            'aria-label': 'change date',\n                                        }}\n                                    />\n                                </Grid>\n                            </MuiPickersUtilsProvider>\n                        </Grid>\n                        {/*<Grid item xs={12}>*/}\n                        {/*    <TextField*/}\n                        {/*        variant=\"outlined\"*/}\n                        {/*        required*/}\n                        {/*        fullWidth*/}\n                        {/*        id=\"dateFrom\"*/}\n                        {/*        label=\"Початкова дата\"*/}\n                        {/*        name=\"Date From\"*/}\n                        {/*        autoComplete=\"Date From\"*/}\n                        {/*        {...bindDateFrom}*/}\n                        {/*    />*/}\n                        {/*</Grid>*/}\n                        {/*<Grid item xs={12}>*/}\n                        {/*    <TextField*/}\n                        {/*        variant=\"outlined\"*/}\n                        {/*        required*/}\n                        {/*        fullWidth*/}\n                        {/*        id=\"dateTo\"*/}\n                        {/*        label=\"Кінцева дата\"*/}\n                        {/*        name=\"Date To\"*/}\n                        {/*        autoComplete=\"Date To\"*/}\n                        {/*        {...bindDateTo}*/}\n                        {/*    />*/}\n                        {/*</Grid>*/}\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"count\"\n                                label=\"Кількість\"\n                                name=\"Count\"\n                                autoComplete=\"Count\"\n                                {...bindCount}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Отримати\n                    </Button>\n                </form>\n                <React.Fragment>\n                    <Title>Замовники</Title>\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Ім'я</TableCell>\n                                <TableCell>Прізвище</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {customers.map((row) => (\n                                <TableRow>\n                                    <TableCell>{row.first_name}</TableCell>\n                                    <TableCell>{row.last_name}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </React.Fragment>\n            </div>\n        </Container>\n    );\n}","import React, {useEffect, useState} from 'react';\n// import Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport {Link} from 'react-router-dom';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n    return { id, date, name, shipTo, paymentMethod, amount };\n}\n\n// const rows = [\n//     createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n//     createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n//     createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n//     createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n//     createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n// ];\n\n//\n// const rows = [\n//\n// ]\n\nfunction preventDefault(event) {\n    event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nexport default function OrdersAll() {\n    const classes = useStyles();\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [orders, setOrders] = useState([]);\n\n    useEffect(() => {\n        fetch(\"https://db-flask-app.herokuapp.com/order\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setOrders(result);\n                    console.log(result);\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    });\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <React.Fragment>\n                <Title>Recent Orders</Title>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Date</TableCell>\n                            <TableCell>Account</TableCell>\n                            <TableCell>Service</TableCell>\n                            <TableCell>Message</TableCell>\n                            {/*<TableCell align=\"right\">Sale Amount</TableCell>*/}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {orders.reverse().map((row) => (\n                            <TableRow>\n                                <TableCell>{row.date}</TableCell>\n                                <TableCell>{row.account}</TableCell>\n                                <TableCell>{row.service}</TableCell>\n                                <TableCell>{row.message}</TableCell>\n                                <TableCell align=\"right\">{row.amount}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </React.Fragment>\n        );\n    }\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './listItems';\nimport Deposits from './Deposits';\nimport Orders from './Orders';\nimport {Switch, Route} from \"react-router-dom\";\nimport {useRouteMatch} from \"react-router\";\nimport Checkout from \"./checkout\";\nimport Album from \"./album\";\nimport Admin from \"./admin\";\nimport Query1Form from \"./query_forms/query1\";\nimport OrdersAll from \"./orders_all\";\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}));\n\nexport default function Dashboard() {\n\n    let match = useRouteMatch();\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n                <Toolbar className={classes.toolbar}>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Message Store\n                    </Typography>\n                    <IconButton color=\"inherit\" href=\"https://www.linkedin.com/in/trumezhak/\">\n                        <Badge color=\"secondary\">\n                            <NotificationsIcon />\n                        </Badge>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                classes={{\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n                }}\n                open={open}\n            >\n                <div className={classes.toolbarIcon}>\n                    <IconButton onClick={handleDrawerClose}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>{mainListItems}</List>\n                {/*<Divider />*/}\n                {/*<List>{secondaryListItems}</List>*/}\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        {/*<Grid item xs={12} md={8} lg={9}>*/}\n                        {/*    <Paper className={fixedHeightPaper}>*/}\n                        {/*        <Chart />*/}\n                        {/*    </Paper>*/}\n                        {/*</Grid>*/}\n                        {/* Recent Deposits */}\n                        {/*<Grid item xs={12} md={4} lg={3}>*/}\n                        {/*    <Paper className={fixedHeightPaper}>*/}\n                        {/*        <Deposits />*/}\n                        {/*    </Paper>*/}\n                        {/*</Grid>*/}\n                        {/* Recent Orders */}\n                        <Grid item xs={12}>\n                            {/*<Paper className={classes.paper}>*/}\n                                <Switch>\n                                    <Route exact path={`${match.path}/orders/all`} component={OrdersAll} />\n                                    <Route exact path={`${match.path}/orders`} component={Orders} />\n                                    <Route path={`${match.path}/order`} component={Checkout} />\n                                    <Route path={`${match.path}/authors`} component={Album} />\n                                    <Route path={`${match.path}/admin/query1`} component={Query1Form} />\n                                    <Route path={`${match.path}/admin`} component={Admin} />\n                                </Switch>\n                                {/*<Orders/>*/}\n                            {/*</Paper>*/}\n                        </Grid>\n                    </Grid>\n                </Container>\n            </main>\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function SignUp() {\n    const classes = useStyles();\n\n    const useInput = initialValue => {\n        const [value, setValue] = useState(initialValue);\n\n        return {\n            value,\n            setValue,\n            reset: () => setValue(\"\"),\n            bind: {\n                value,\n                onChange: event => {\n                    setValue(event.target.value);\n                }\n            }\n        };\n    };\n\n    const {value:firstName, bind:bindFirstName, reset:resetFirstName} = useInput('');\n    const {value:lastName, bind:bindLastName, reset:resetLastName} = useInput('');\n    const {value:email, bind:bindEmail, reset:resetEmail} = useInput('example@gmail.com');\n    const {value:userName, bind:bindUserName, reset:resetUserName} = useInput('');\n    const {value:password, bind:bindPassword, reset:resetPassword} = useInput('');\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        let state = {\n            first_name: firstName,\n            last_name: lastName,\n            username: userName,\n            email: email,\n            password: password\n        };\n\n        fetch(\"http://localhost:5000/users\", {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(state)\n        }).then(function (response) {\n            // console.log(response);\n            // console.log(state);\n            // return response.json();\n            if (response.status === 200) {\n                // return <Redirect to='login'/>\n            }\n        });\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"fname\"\n                                name=\"firstName\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                autoFocus\n                                {...bindFirstName}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                autoComplete=\"lname\"\n                                {...bindLastName}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                name=\"username\"\n                                autoComplete=\"username\"\n                                {...bindUserName}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                {...bindEmail}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                {...bindPassword}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\">\n                Chat Dealers\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function SignIn() {\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        autoComplete=\"username\"\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    {/*<FormControlLabel*/}\n                    {/*    control={<Checkbox value=\"remember\" color=\"primary\" />}*/}\n                    {/*    label=\"Remember me\"*/}\n                    {/*/>*/}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        {/*<Grid item xs>*/}\n                        {/*    <Link href=\"#\" variant=\"body2\">*/}\n                        {/*        Forgot password?*/}\n                        {/*    </Link>*/}\n                        {/*</Grid>*/}\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}","import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from \"react-router-dom\";\nimport Redirect from \"react-router-dom/es/Redirect\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: 'url(https://media1.giphy.com/media/26FPJGjhefSJuaRhu/source.gif)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function SignInSide() {\n    const classes = useStyles();\n\n    const useInput = initialValue => {\n        const [value, setValue] = useState(initialValue);\n\n        return {\n            value,\n            setValue,\n            reset: () => setValue(\"\"),\n            bind: {\n                value,\n                onChange: event => {\n                    setValue(event.target.value);\n                }\n            }\n        };\n    };\n\n    const {value:email, bind:bindEmail, reset:resetEmail} = useInput('example@gmail.com');\n    const {value:password, bind:bindPassword, reset:resetPassword} = useInput('');\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        let state = {\n            email: email,\n            password: password\n        };\n        return <Redirect to='main'/>;\n        // if (email===\"test@gmail.com\" && password===\"qwerty12345\") {\n        //     return <Redirect to='main'/>;\n        // }\n    };\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                    </Typography>\n                    <form className={classes.form} noValidate onSubmit={handleSubmit}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            {...bindEmail}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            {...bindPassword}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Remember me\"\n                        />\n                        <Link to=\"dashboard\">\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign In\n                        </Button>\n                        </Link>\n                        <Grid container>\n                            <Grid item>\n                                <Link to='register'>\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}","import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {Link} from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from \"@material-ui/core/Container\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: 'url(https://media1.giphy.com/media/26FPJGjhefSJuaRhu/source.gif)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function SignUpSide() {\n    const classes = useStyles();\n\n    const useInput = initialValue => {\n        const [value, setValue] = useState(initialValue);\n\n        return {\n            value,\n            setValue,\n            reset: () => setValue(\"\"),\n            bind: {\n                value,\n                onChange: event => {\n                    setValue(event.target.value);\n                }\n            }\n        };\n    };\n\n    const {value:firstName, bind:bindFirstName, reset:resetFirstName} = useInput('');\n    const {value:lastName, bind:bindLastName, reset:resetLastName} = useInput('');\n    const {value:email, bind:bindEmail, reset:resetEmail} = useInput('example@gmail.com');\n    const {value:userName, bind:bindUserName, reset:resetUserName} = useInput('');\n    const {value:password, bind:bindPassword, reset:resetPassword} = useInput('');\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        let state = {\n            first_name: firstName,\n            last_name: lastName,\n            username: userName,\n            email: email,\n            password: password\n        };\n\n        fetch(\"https://db-flask-app.herokuapp.com/users\", {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(state)\n        }).then(function (response) {\n            // console.log(response);\n            // console.log(state);\n            // return response.json();\n            if (response.status === 200) {\n                // return <Redirect to='login'/>\n            }\n        });\n    };\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <form className={classes.form} noValidate onSubmit={handleSubmit}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    autoComplete=\"fname\"\n                                    name=\"firstName\"\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    {...bindFirstName}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    autoComplete=\"lname\"\n                                    {...bindLastName}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"username\"\n                                    label=\"Username\"\n                                    name=\"username\"\n                                    autoComplete=\"username\"\n                                    {...bindUserName}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    {...bindEmail}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    {...bindPassword}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link to=\"/\">\n                                    Already have an account? Sign in\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}","import React from \"react\";\nimport {Switch, Route} from \"react-router-dom\";\nimport SignInSide from \"./signinside\";\nimport SignUpSide from \"./signupside\";\nimport Dashboard from \"./Dashboard\";\n\nexport default function Main() {\n    return(\n        <Switch>\n            <Route exact path='/' component={SignInSide} />\n            <Route exact path='/register' component={SignUpSide}/>\n            <Route path='/dashboard' component={Dashboard} />\n        </Switch>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Dashboard from \"./Dashboard\";\nimport SignUp from \"./signup\";\nimport SignIn from \"./signin\";\nimport Checkout from \"./checkout\";\nimport SignInSide from \"./signinside\";\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport Main from \"./main\";\n\nReactDOM.render(\n  <React.StrictMode>\n     <Router>\n         <Main/>\n     </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}